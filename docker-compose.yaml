version: '3.8'
services:
  db:
    image: mysql:8.0
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=books_api
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=db_user
      - MYSQL_PASSWORD=db_user_pass
    ports:
      - '3306:3306'
    volumes:
      - db:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - books-api-network
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pma
    links:
      - db
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    restart: always
    ports:
      - 8081:80
    networks:
      - books-api-network


  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    restart: on-failure
    container_name: ${PROJECT_NAME:-books-api}-php
    volumes:
      - '.:/usr/src/app'
    user: ${LOCAL_USER}
    networks:
      - books-api-network
    env_file:
      - docker.env
    
  nginx:
    image: nginx:1.19.0-alpine
    restart: on-failure
    container_name: ${PROJECT_NAME:-books-api}-nginx
    volumes:
      - './public/:/usr/src/app'
      - './docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro'
    ports:
      - '${NGINX_PORT:-9185}:80'
    depends_on:
         - php
    networks:
      - books-api-network
    env_file:
      - docker.env

networks:
  books-api-network: { }

volumes:
  books-api-postgres-data:
###> doctrine/doctrine-bundle ###
  db:
###< doctrine/doctrine-bundle ###
